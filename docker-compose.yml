services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:5173"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://stomtest.nsmu.ru:5000
    networks:
      - app-network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - DB_HOST=mariadb
      - DB_PORT=3306
      - DB_NAME=quizz_db
      - DB_USER=quizz_user
      - DB_PASSWORD=quizz_password123
      - NODE_ENV=production
      - PORT=5000
      - HOST=stomtest.nsmu.ru
    depends_on:
      mariadb:
        condition: service_healthy
    networks:
      - app-network

  mariadb:
    image: mariadb:10.5-alpine
    platform: linux/amd64
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --skip-character-set-client-handshake
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: admin123
      MYSQL_DATABASE: quizz_db
      MYSQL_USER: quizz_user
      MYSQL_PASSWORD: quizz_password123
      MYSQL_INITDB_SKIP_TZINFO: 1
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    networks:
      - app-network

volumes:
  mariadb_data:
    driver: local

networks:
  app-network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1400